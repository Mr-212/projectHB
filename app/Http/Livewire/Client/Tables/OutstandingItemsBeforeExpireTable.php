<?php

namespace App\Http\Livewire\Client\Tables;

use App\Constants\Dropdowns\MortgageTypeDropdown;
use App\Constants\Dropdowns\YesNoDropdown;
use App\Models\Client;
use App\Models\User;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\NumberColumn;
use App\Constants\StageConstant;
class OutstandingItemsBeforeExpireTable extends LivewireDatatable
{

    public function mount($model = null, $include = [], $exclude = [], $hide = [], $dates = [], $times = [], $searchable = [], $sort = null, $hideHeader = null, $hidePagination = null, $perPage = 10, $exportable = false, $hideable = false, $beforeTableSlot = false, $afterTableSlot = false, $params = [])
    {
        parent::mount($model, $include, $exclude, $hide, $dates, $times, $searchable, $sort, $hideHeader, $hidePagination, $perPage, $exportable, $hideable, $beforeTableSlot, $afterTableSlot, $params); // TODO: Change the autogenerated stub
    }

    public function builder()
    {

        return Client::with('property','pre_closing')->beforeDDExpire();
    }

    public function columns()
    {
        return [
//            Column::checkbox(),
            Column::callback(['id'], function ($id) {
                return view('livewire.client.tables.actions.outstanding-items-before-dd-actions', ['id' => $id]);
            }),


            NumberColumn::name('id')
                ->defaultSort('id')
                ->label('ID'),

            Column::callback('stage',function($stage){
                return StageConstant::getValueByKey($stage);
            })->label('Stage'),

            Column::name('property.closing_date')
                ->label('Closing Date'),

            Column::name('property.due_diligence_expire_date')
                ->label('Due Diligence Expire'),

//            Column::name('property.is_deal_save_checked->updated_at')
//                ->label('Deal Save updated by'),
//            Column::name('property.is_deal_save_checked->is_checked')
//                ->label('Deal Saved?'),


            Column::callback(['updated_by'], function ($updated_by) {
                return User::getUserNameByID($updated_by);
            })->label('Updated By'),

            Column::name('applicant_name')
                ->label('Applicant Name')
                ->filterable(),

            Column::name('applicant_email')
                ->filterable(),

            Column::name('applicant_phone')
                ->label('Applicant Phone'),

            Column::name('partner_name')
                ->label('Partner Name'),

            Column::name('partner_email')
                ->label('Partner Email'),

            Column::name('partner_phone')
                ->label('Partner Phone'),

//            Column::name('co_applicant_name')
//                ->label('Co applicant Name'),
//
//            Column::name('co_applicant_email')
//                ->label('Co applicant Email'),
//
//            Column::name('co_applicant_phone')
//                ->label('Co applicant Phone'),

            Column::name('additional_tenant_name')
                ->label('Co applicant Phone'),

            Column::callback(['welcome_payment'], function ($welcome_down_payment_id) {
                return YesNoDropdown::getValueByKey($welcome_down_payment_id);
            })->label('Welcome Payment'),

            Column::callback(['mortgage_type_id'], function ($mortgage_type_id) {
                return MortgageTypeDropdown::getValueByKey($mortgage_type_id);
            })->label('Mortgage TYpe'),


            Column::callback(['rental_verification_checked'], function ($rental_verification_check) {
                return YesNoDropdown::getValueByKey($rental_verification_check);
            })->label('Rental Verification Check'),

//            Column::name('property_new_construction_builder_name')
//                ->label('Builder Name'),

        ];
    }
}